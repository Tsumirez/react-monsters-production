{"version":3,"sources":["components/card/card.component.jsx","components/card-list/card-list.component.jsx","components/search-box/search-box.component.jsx","App.js","reportWebVitals.js","index.js"],"names":["Card","monster","className","src","id","alt","name","email","CardList","props","monsters","map","SearchBox","placeholder","handleChange","type","onChange","App","e","setState","searchField","target","value","state","fetch","then","response","json","users","catch","err","console","log","this","filteredMonsters","filter","toLowerCase","includes","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"mTAGaA,EAAO,SAAC,GAAD,IAAEC,EAAF,EAAEA,QAAF,OAChB,sBAAKC,UAAU,iBAAf,UACI,qBAAKC,IAAG,8BAAyBF,EAAQG,GAAjC,0BAA6DC,IAAI,YACzE,6BAAKJ,EAAQK,OACb,4BAAIL,EAAQM,YCHPC,EAAW,SAACC,GACvB,OACE,qBAAKP,UAAU,YAAf,SACGO,EAAMC,SAASC,KAAI,SAACV,GAAD,OAClB,cAAC,EAAD,CAAuBA,QAASA,GAArBA,EAAQG,UCLdQ,G,MAAY,SAAC,GAAD,IAAGC,EAAH,EAAGA,YAAaC,EAAhB,EAAgBA,aAAhB,OACvB,uBACEZ,UAAU,SACVa,KAAK,SACLT,KAAK,GACLF,GAAG,GACHY,SAAUF,EACVD,YAAaA,MCmCFI,E,kDAvCb,aAAe,IAAD,8BACZ,gBAeFH,aAAe,SAACI,GACd,EAAKC,SAAS,CAACC,YAAaF,EAAEG,OAAOC,SAdrC,EAAKC,MAAQ,CACXb,SAAU,GACVU,YAAa,IALH,E,qDASd,WAAqB,IAAD,OAClBI,MAAM,8CACHC,MAAK,SAACC,GAAD,OAAcA,EAASC,UAC5BF,MAAK,SAACG,GAAD,OAAW,EAAKT,SAAS,CAAET,SAAUkB,OAC1CC,OAAM,SAACC,GAAD,OAASC,QAAQC,IAAIF,Q,oBAOhC,WACE,MAAkCG,KAAKV,MAA/Bb,EAAR,EAAQA,SAAUU,EAAlB,EAAkBA,YACZc,EAAmBxB,EAASyB,QAAO,SAAAlC,GAAO,OAC9CA,EAAQK,KAAK8B,cAAcC,SAASjB,EAAYgB,kBAGlD,OACE,sBAAKlC,UAAU,MAAf,UACE,kDAEA,cAAC,EAAD,CAAWW,YAAY,kBAAkBC,aAAcmB,KAAKnB,eAC5D,cAAC,EAAD,CAAUJ,SAAUwB,W,GAhCVI,aCOHC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBhB,MAAK,YAAkD,IAA/CiB,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.cdbae93d.chunk.js","sourcesContent":["import React from 'react';\nimport './card.styles.css'\n\nexport const Card = ({monster}) => (\n    <div className=\"card-container\">\n        <img src={`http://robohash.org/${monster.id}?set=set2&size=180x180`} alt=\"monster\" />\n        <h2>{monster.name}</h2>\n        <p>{monster.email}</p>\n    </div>\n) ","import React from \"react\";\nimport \"./card-list-styles.css\";\nimport { Card } from \"../card/card.component\";\n\nexport const CardList = (props) => {\n  return (\n    <div className=\"card-list\">\n      {props.monsters.map((monster) => (\n        <Card key={monster.id} monster={monster} />\n      ))}\n    </div>\n  );\n};\n","import React from \"react\";\nimport \"./search-box-styles.css\";\n\nexport const SearchBox = ({ placeholder, handleChange }) => (\n  <input\n    className=\"search\"\n    type=\"search\"\n    name=\"\"\n    id=\"\"\n    onChange={handleChange}\n    placeholder={placeholder}\n  />\n);\n","import { Component } from \"react\";\nimport \"./App.css\";\nimport { CardList } from \"./components/card-list/card-list.component\";\nimport { SearchBox } from './components/search-box/search-box.component'\n\nclass App extends Component {\n  constructor() {\n    super();\n\n    this.state = {\n      monsters: [],\n      searchField: ''\n    };\n  }\n\n  componentDidMount() {\n    fetch(\"https://jsonplaceholder.typicode.com/users\")\n      .then((response) => response.json())\n      .then((users) => this.setState({ monsters: users }))\n      .catch((err) => console.log(err));\n  }\n\n  handleChange = (e) => {\n    this.setState({searchField: e.target.value})\n  } \n\n  render() {\n    const { monsters, searchField } = this.state;\n    const filteredMonsters = monsters.filter(monster => (\n      monster.name.toLowerCase().includes(searchField.toLowerCase())\n    ))\n\n    return (\n      <div className=\"App\">\n        <h1>Monsters Rolodex</h1>\n\n        <SearchBox placeholder='search monsters' handleChange={this.handleChange}/>\n        <CardList monsters={filteredMonsters}>\n\n        </CardList>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}